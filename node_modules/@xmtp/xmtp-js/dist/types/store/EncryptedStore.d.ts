import { Store } from './Store';
import { Signer } from 'ethers';
import { PrivateKeyBundle } from '../crypto';
import { KeyStore } from './KeyStore';
/**
 * EncryptedStore is an abstraction on top of the generic Store which enables the decryption and decoding
 * of specific data types.
 *
 * Currently supports:
 * - PrivateKeyBundle
 */
export default class EncryptedStore implements KeyStore {
    private store;
    private signer;
    constructor(signer: Signer, store: Store);
    private getStorageAddress;
    loadPrivateKeyBundle(): Promise<PrivateKeyBundle | null>;
    storePrivateKeyBundle(bundle: PrivateKeyBundle): Promise<void>;
}
